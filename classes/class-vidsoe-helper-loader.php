<?php

class Vidsoe_Helper_Loader {

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    private static function content(){
        $basename = 'vidsoe-helper/vidsoe-helper.php';
        $class = 'vidsoe-helper/classes/class-vidsoe-helper.php';
        $content = <<<EOF
<?php
/*
Author: Vidsoe
Author URI: https://vidsoe.com
Description: This is automatically generated by the Vidsoe Helper plugin. It is automatically disabled when disabling the main plugin.
License: GPL2
License URI: https://www.gnu.org/licenses/gpl-2.0.html
Network: true
Plugin Name: Vidsoe Helper Loader
Plugin URI: https://github.com/vidsoe/vidsoe-helper
Version: 1
*/

if(!function_exists('trailingslashit') or !defined('WP_PLUGIN_DIR')){
    exit; // WordPress is probably not bootstrapped.
}
if(file_exists(trailingslashit(WP_PLUGIN_DIR) . '$basename')){
    if(in_array('$basename', (array) get_option('active_plugins')) or (function_exists('get_site_option') and array_key_exists('$basename', (array) get_site_option('active_sitewide_plugins')))){
        require_once(trailingslashit(WP_PLUGIN_DIR) . '$class');
    }
}

EOF;
        return $content;
    }

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    private static function register(){
        $basename = 'vidsoe-helper/vidsoe-helper.php';
        $content = self::content();
        $file = trailingslashit(WPMU_PLUGIN_DIR) . $basename;
        if(file_exists($file) and md5($content) === md5_file($file)){
            return;
        }
        if(!is_dir(WPMU_PLUGIN_DIR) and !@mkdir(WPMU_PLUGIN_DIR)){
            $error = error_get_last();
            throw new Exception(sprintf('Unable to create loader directory: %s', $error['message']));
        }
        if(!is_writable(WPMU_PLUGIN_DIR)){
            throw new Exception('MU-plugin directory is not writable.');
        }
        if(!@file_put_contents($file, $content)){
            $error = error_get_last();
            throw new Exception(sprintf('Unable to write loader: %s', $error['message']));
        }
    }

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    private static function unregister(){
        $basename = 'vidsoe-helper/vidsoe-helper.php';
        $file = trailingslashit(WPMU_PLUGIN_DIR) . $basename;
        if(!file_exists($file)){
            return;
        }
        if(!@unlink($file)){
            $error = error_get_last();
            throw new Exception(sprintf('Unable to remove loader: %s', $error['message']));
        }
    }

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    public static function install(){
        try {
            self::register();
        } catch(Throwable $t){ // Executed only in PHP 7, will not match in PHP 5
            wp_die('<h1>' . __('Something went wrong.') . '</h1><p>' . $t->getMessage() . '.</p>');
        } catch(Exception $e){ // Executed only in PHP 5, will not be reached in PHP 7
            wp_die('<h1>' . __('Something went wrong.') . '</h1><p>' . $e->getMessage() . '.</p>');
        }
    }

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    public static function uninstall(){
        try {
            self::unregister();
        } catch(Throwable $t){ // Executed only in PHP 7, will not match in PHP 5
            wp_die('<h1>' . __('Something went wrong.') . '</h1><p>' . $t->getMessage() . '.</p>');
        } catch(Exception $e){ // Executed only in PHP 5, will not be reached in PHP 7
            wp_die('<h1>' . __('Something went wrong.') . '</h1><p>' . $e->getMessage() . '.</p>');
        }
    }

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

}
